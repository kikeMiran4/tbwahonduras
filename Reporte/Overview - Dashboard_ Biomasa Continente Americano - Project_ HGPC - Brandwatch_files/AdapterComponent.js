define(["backbone","src/permissions","src/globals/currentDashboard","src/controls/lib/paramAssert","src/helpers/componentEventsHelper","src/components/helper/views/AdapterComponentView","src/views/HelpView","src/components/ComponentWithCustomizeBar"],function(Backbone,permissions,currentDashboard,paramAssert,componentEventsHelper,AdapterComponentView,HelpView,ComponentWithCustomizeBar){"use strict";var AdapterComponent=ComponentWithCustomizeBar.extend({constructor:function AdapterComponent(){var _this=this;var options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};paramAssert.isInstance(this.model,Backbone.Model,"model is missing");paramAssert.isNotDefined(this.appKey,"appKey is missing");this.renderProps={customizeBarOpen:options.customizeBarOpen!==false,insightsSidebarActive:options.insightsSidebarActive,permissions:{canSeeControls:permissions.check("see.dashboard.controls",currentDashboard)}};this.messageBus=Object.assign({},Backbone.Events);this.listenTo(this.model.settings,"change",function(){_this.messageBus.trigger("settings:change",_this.model.settings.toJSON())});this.listenTo(this.messageBus,"customizeBar:toggled",function(open){return _this.trigger("customizeBarToggled",_this,open)});this.listenTo(this.messageBus,"settings:set",function(settings){_this.model.settings.set(settings);componentEventsHelper.triggerComponentSettingsSetTrackingEvent(_this,settings)});if(this.helpKey){HelpView.addPrefix(this.helpKey,"/src/components/".concat(this.helpKey,"/help/"))}this.customizeBarConfigKey="benchmark";ComponentWithCustomizeBar.apply(this,arguments)},getViews:function getViews(){return{baseView:{isDefault:true,type:AdapterComponentView,options:{appKey:this.appKey,messageBus:this.messageBus,renderProps:this.renderProps}}}},getHelpKey:function getHelpKey(){return"".concat(this.helpKey,":").concat(this.helpKey,"-component")},remove:function remove(){if(this.messageBus){this.messageBus.off();this.messageBus=undefined}ComponentWithCustomizeBar.prototype.remove.apply(this,arguments)}});return AdapterComponent});